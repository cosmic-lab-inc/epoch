[config]
default_to_workspace = false

[tasks.backfill]
script = "cargo run -p backfill"

[tasks.epoch]
script = "cargo run -p epoch_server"

[tasks.covest]
script = "cargo run -p covest"

########################################
# TIMESCALE
########################################

# sqlx is a manager to connect to a postgres database. It does not create a server or users!
[tasks.install_sqlx_cli]
command = "cargo"
args = ["install", "sqlx-cli", "--no-default-features", "--features", "native-tls,postgres"]

[tasks.wipe_migrations]
script = "rm -rf migrations"

[tasks.create_migrations]
dependencies = ["install_sqlx_cli"]
env = { DATABASE_URL = "postgres://tsdbadmin:wtf6fegycrmxta0l@udknb7l6fx.iy6czc8qic.tsdb.cloud.timescale.com:34247/tsdb?sslmode=require" }
#env = { DATABASE_URL = "postgres://tsdbadmin:wtf6fegycrmxta0l@udknb7l6fx.iy6czc8qic.tsdb.cloud.timescale.com:31751/tsdb?sslmode=require" }
command = "sqlx"
args = ["migrate", "add", "-r", "epoch"]

[tasks.copy_migrations]
script = "chmod +x ./migrate.sh && ./migrate.sh"

[tasks.migrate_database]
dependencies = ["install_sqlx_cli"]
env = { DATABASE_URL = "postgres://tsdbadmin:wtf6fegycrmxta0l@udknb7l6fx.iy6czc8qic.tsdb.cloud.timescale.com:34247/tsdb?sslmode=require" }
#env = { DATABASE_URL = "postgres://tsdbadmin:wtf6fegycrmxta0l@udknb7l6fx.iy6czc8qic.tsdb.cloud.timescale.com:31751/tsdb?sslmode=require" }
script = "sqlx migrate run"

[tasks.setup-timescale]
dependencies = ["wipe_migrations", "create_migrations", "copy_migrations", "migrate_database"]
